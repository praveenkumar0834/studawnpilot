import { EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { AppSidebarService } from './app-sidebar.service';
import * as ɵngcc0 from '@angular/core';
export declare class AppSidebarComponent implements OnInit, OnDestroy {
    private document;
    private renderer;
    private sidebarService;
    private subscriptionEvents;
    private _minimized;
    compact: boolean;
    display: any;
    fixed: boolean;
    offCanvas: boolean;
    minimized: boolean;
    /**
     * Emits whenever the minimized state of the sidebar changes.
     * Primarily used to facilitate two-way binding.
     */
    minimizedChange: EventEmitter<boolean>;
    _sidebar: boolean;
    constructor(document: any, renderer: Renderer2, sidebarService: AppSidebarService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    isCompact(compact?: boolean): void;
    isFixed(fixed?: boolean): void;
    toggleMinimized(): void;
    isOffCanvas(offCanvas?: boolean): void;
    displayBreakpoint(display?: any): void;
    private _updateMinimized;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AppSidebarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AppSidebarComponent, "app-sidebar, cui-sidebar", never, { 'minimized': "minimized", 'compact': "compact", 'display': "display", 'fixed': "fixed", 'offCanvas': "offCanvas" }, { 'minimizedChange': "minimizedChange" }, never>;
}

//# sourceMappingURL=app-sidebar.component.d.ts.map